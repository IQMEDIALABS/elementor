name: Playwright

on:
  #pull_request:
  workflow_dispatch:
      inputs:
        reporter:
          required: false
          description: 'Select a reporter'
          type: choice
          options:
            - allure-playwright
            - html
            - blob
            - list
          default: allure-playwright
        path-to-results:
          required: false
          description: 'Provide path to reporter files'
          default: allure-results
          type: choice
          options:
            - test-results/
            - tests/playwright/blob-report
            - allure-results
        fail_fast:
            type: boolean
            required: true
            description: 'Cancel tests when one of them fails'
            default: false
  workflow_run:
    workflows: [Build]
    types:
      - completed


# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  # build-plugin:
  #   if: ${{github.event.workflow_dispatch}}
  #   uses: ./.github/workflows/build.yml
  Playwright:
    name: Playwright test - ${{ matrix.testSuite }} on PHP 7.4
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    #if: ${{ github.event.pull_request.title == null || needs.build-plugin.outputs.changelog_diff }}
    strategy:
      fail-fast: ${{inputs.fail_fast || true}}
      matrix:
        testSuite: [
          'ai',
          'onBoarding',
          'video',
          'elements-regression',
          'default',
          'nested-tabs',
          'reverse-columns',
          'container',
          'nested-accordion',
          'styleguide_image_link',
          'rating',
          'pluginTester1_containers',
          'pluginTester2_containers',
          'pluginTester1_sections',
          'pluginTester2_sections',
          'promotions',
          'nested-atomic-repeaters',
        ]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Install Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      # - name: Download build artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: ${{ needs.build-plugin.outputs.artifact_name }}
      #     path: ./build
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "elementor_build-${{github.event.pull_request.id}}"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_number.zip`, Buffer.from(download.data));

      - name: 'Unzip artifact'
        run: unzip elementor_build-${{github.event.pull_request.id}} -d build
      - name: Debug
        run: | 
          pwd
          ls -al
      - name: Update wp-env.json file
        env:
          PHP_VERSION: '8.0'
          WP_CORE_VERSION: 'latest'
        run: node ./.github/scripts/build-wp-env.js
      - name: Install WordPress environment
        run: |
          npm run start-local-server
          npm run test:setup:playwright
      - name: WordPress debug information
        run: |
          npx wp-env run cli wp core version
          npx wp-env run cli wp --info
      - name: Activate performance experiments
        run: |
          npx wp-env run cli wp elementor experiments activate e_font_icon_svg,e_lazyload,e_optimized_assets_loading,e_optimized_css_loading,additional_custom_breakpoints,e_image_loading_optimization
      - name: Install playwright/test
        run: |
          npx playwright install chromium
      - name: Run Playwright tests
        if: ${{matrix.testSuite !='elements-regression'}}
        env:
          TEST_SUITE: "@${{matrix.testSuite}}"
        run: npm run test:playwright -- --reporter=${{inputs.reporter || 'list,github'}}
      - name: Run element regression tests
        if: ${{matrix.testSuite =='elements-regression'}}
        run: npm run test:playwright:elements-regression -- --reporter=${{inputs.reporter || 'list,github'}}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-test-results-${{ matrix.testSuite }}
          path: ${{inputs.path-to-results || 'test-results/'}}
          if-no-files-found: ignore
          retention-days: 2

  test-result:
    needs: Playwright
    if: ${{ always() }} # Will be run even if 'Playwright' matrix will be skipped
    runs-on: ubuntu-22.04
    name: Playwright - Test Results
    steps:
      - name: Test status
        run: echo "Test status is - ${{ needs.Playwright.result }}"
      - name: Check Playwright matrix status
        if: ${{ needs.Playwright.result != 'success' && needs.Playwright.result != 'skipped' }}
        run: exit 1
