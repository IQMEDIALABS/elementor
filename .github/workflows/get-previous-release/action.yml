name: Get Previous Release
description: Get the previous release name from the current tag and set it as an environment variable.

inputs:
  CHANNEL:
    required: true
    description: "The channel to get the version to (ga, cloud, beta)."

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        # If the channel is either "cloud" or "beta", fetch all Git tags matching the channel pattern,
        # excluding any "-rc" tags, and store them in the 'tags' variable. e.g. "refs/tags/v3.11.0-cloud1 , refs/tags/v3.11.0-cloud2"
        if [[ ${{ inputs.CHANNEL }} == "cloud" || ${{ inputs.CHANNEL }} == "beta" ]]; then
           latest_tag=$(git ls-remote --tags | grep -v "\-rc" | awk -F/ '/-${{ inputs.CHANNEL }}/{print $3 $4}' | sort -t- -k1,1V -k2,2V | tail -n 1 | awk '{print "refs/tags/"$1}')
        fi

        # If the channel is "ga", fetch all Git tags matching the semantic versioning pattern "vX.Y.Z"
        # and store them in the 'tags' variable. e.g. "refs/tags/v3.11.1 , refs/tags/v3.11.2"
        if [[ ${{ inputs.CHANNEL }} == "ga" ]]; then
           latest_tag=$(git ls-remote --tags | grep -v "\-rc" | grep -v "\-cloud" | grep -v "\-dev" | grep -v "\-beta" | awk '{print $2}' | grep -E 'v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
        fi

        echo "channel=${{ inputs.CHANNEL }} , latest_tag=${latest_tag}"

        # e.g. refs/tags/v3.11.0-xxxxx -> 71163df6d14ba8f29e25098fde0c85fc8c1d2ca7
        PREVIOUS_TAG_SHA=$(git rev-parse ${latest_tag})
        echo "PREVIOUS_TAG_SHA=${PREVIOUS_TAG_SHA} \n tag=${latest_tag}"
        echo "PREVIOUS_TAG_SHA=${PREVIOUS_TAG_SHA}" >> $GITHUB_ENV
